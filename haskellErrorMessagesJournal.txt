Variable not in scope: divide :: [t0] -> t
    Trying to use something that isn't there.
* Couldn't match expected type `Bool'
                  with actual type `([t0], [t1])'
    Trying to match inncompatible types.
* Ambiguous type variable `t0' arising from a use of `=='
      prevents the constraint `(Eq t0)' from being solved.
      Probable fix: use a type annotation to specify what `t0' should be.
      These potential instances exist:
        instance Eq Ordering -- Defined in `GHC.Classes'
        instance Eq Integer
          -- Defined in `integer-gmp-1.0.0.1:GHC.Integer.Type'
        instance Eq a => Eq (Maybe a) -- Defined in `GHC.Base'
        ...plus 22 others
        ...plus 8 instances involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    The type checker is confused.
error: parse error on input `->'
    Bad syntax.
error: Not in scope: type constructor or class `-'
    Using something that is not there.
error:
    Illegal operator `-' in type `[a] - > ([a], [a])'
      Use TypeOperators to allow operators in types
    Using something wrong.
error:
    Operator applied to too few arguments: [a] - > ([a], [a])
    Using something wrong.

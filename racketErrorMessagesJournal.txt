error: unbound identifier in: error
	Trying to use something that is not defined.
define: bad syntax (multiple expressions after identifier) in: (define swapper lambda (first second list))
	Having more than one expression after an identifier.
lambda: bad syntax in: (lambda (first second list))
	Bad syntax.
check-expect: expects only 2 arguments, but found 3 in: (check-expect 0 fib 0)
	Giving something more arguments than it expects.
read-syntax: unexpected `)`
	Having something in the wrong place.
read-syntax: expected a `)` to close `(`
	Not having braces matched up.
cases: not a datatype name in: bintree
	Trying to do cases with something that isn't a datatype.
read-syntax: missing `)` to close `(` on line 229, found instead `]`
	Not having braces matched up.
read-syntax: illegal use of `.`
	Using something the wrong way.
#%app: bad syntax in: (#%app int . int)
	Bad syntax.
if: missing an "else" expression in: (if (equal? (quote ()) (cdr firstBits)) (if carryIn (carry1 secondBits) secondBits))
	Having an if without an else.
standard-module-name-resolver: collection not found
  for module path: vector-values
  collection: "vector-values"
  in collection directories:
   C:\Users\ajql8\AppData\Roaming\Racket\7.4\collects
   C:\Program Files\Racket\collects
   ... [166 additional linked and package directories]
  no package suggestions are available .
	Trying to import something that isn't there.
vector-values: not a require sub-form in: (vector-values)
	Trying to import something impropperly.
only-in: identifier `vector-values' not included in nested require spec in: racket/base
	Trying to import something from the wrong place.
read-syntax: unknown escape sequence `\ ` in string
	Having an escape sequence that isn't know in a string.
_run: undefined;
 cannot reference an identifier before its definition
	Trying to reference an identifier before its definition.
read-syntax: missing `]` to close preceding `[`, found instead `)`
	Not having braces matched up.
define-datatype: expected a field name followed by a predicate expression, all in parentheses in: eval-thr?
	Having something where it looks like it shouldn't be.
module: identifier already defined in: eval-exp
	Trying to define something more than once.
lambda: duplicate argument name in: thr*
	Using the same name moree than once.
cases: missing cases for the following variants: eval-thr cont-thr in: (cases thr t)
	Not having cases for all of the possiblities in a cases statement.